---
import Custompicture from "@components/custompicture.astro";
import Layout from "@layouts/layout.astro";

import { getCollection } from "astro:content";

import { format, formatISO } from "date-fns";
import { categories } from "@lib/constants";

import "github-markdown-css/github-markdown-light.css";

export async function getStaticPaths({}) {
  const blogPosts = await getCollection("blog");

  return blogPosts.map((post) => {
    return { params: { slug: post.slug }, props: { post: post } };
  });
}

const { post } = Astro.props;
const { Content } = await post.render();

const {
  data: { title, pubDate, image, category, description },
} = post;

const pubDateISO = formatISO(pubDate);
const pubDateJA = format(pubDate, "yyyy年MM月dd日");
---

<Layout pageTitle={title} description={description} pageImg={image}>
  <article>
    <Custompicture src={image} alt="" />
    <h1>{title}</h1>

    <div class="flex-spacebetween">
      <!-- 投稿日を出力 -->
      <time datetime={pubDateISO}>{pubDateJA}</time>

      <div class="flex">
        {
          category.map((categorySlug: string) => {
            const categoryName = categories.find(
              (cat) => cat.categorySlug === categorySlug
            )?.categoryName;
            return (
              <a href={`/blog/category/${categorySlug}`}>{categoryName}</a>
            );
          })
        }
      </div>
    </div>
    <div class="markdwon-body large-space">
      <Content components={{ img: Custompicture }} />
    </div>
  </article>
</Layout>
